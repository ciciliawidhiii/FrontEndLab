useEffect(()=>{
        refreshToken();
    }, []);

    //ini belum bisa token
    const refreshToken = async() => {
        try{
            const response = await axios.get('');
            setToken(response.data.accessToken);
            const decoded = jwt_decode(response.data.accessToken);
            console.log(decoded);
            setName(decoded.name);
            setExpired(decoded.exp);
        } catch(error){
            if(error.response){
                navigate("/login")
            }
        }
    }
    
    //token
    const axiosJWT = axios.create();

    //ini belum bisa token
    axiosJWT.interceptors.request.use(async(config)=>{
        const currentDate = new Date();
        if(expired * 1000 < currentDate.getTime()){
            const response = await axios.get('');
            config.headers.Authorization = `Bearer ${response.data.accessToken}`;
            setToken(response.data.accessToken);
            const decoded = jwt_decode(response.data.accessToken);
            setName(decoded.name);
            setExpired(decoded.exp);
        }
        return config;
    }, (error)=>{
        return Promise.return(error);
    });

    //ini belum bisa token
    const getUsers = async() => {
        const response = await axiosJWT.get('',{
            headers:{
                Authorization: `Bearer ${token}`
            }
        });
        console.log(response.data);
    }